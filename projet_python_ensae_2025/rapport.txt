A propos de la complexité de la solution gloutonne :

Soit n le nombre de cases, si on met de côté les contraintes de couleur pour se donner une idée
de la complexité du programme, il y a environ 2**(n/2) possibilités pour former les paires.
On obtient ce résultat en partant d'un coin, disons en bas à gauche on a alors deux possibilité 
pour former une paire si on impose de choisir la 2ème case au dessus ou à droite de la première.
On choisit ensuite que la première case de la paire suivante doit être le plus bas possible puis
le plus à gauche possible, ainsi la laigne en dessous est complète et la case à droite n'est pas
disponible, on peut donc approximer qu'il y a deux possibilités pour former une paire.

Admettons que la fonction np.argmin(liste) a une complexité proportionnelle à len(liste) (les
autres opérations sont négligeables) car elle parcours la liste pour repérer l'indice du min. 
Alors à chaque itération qui diminue n de 2, donc à la k-ème itération la complexité augmente 
d'une valeure proportionnelle à 2**(n/2 -k)

En sommant on obtient que la complexité totale est proportionnelle à 2**(n/2) 